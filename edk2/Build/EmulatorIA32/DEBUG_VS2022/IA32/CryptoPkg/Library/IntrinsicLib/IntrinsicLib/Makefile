#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = EmulatorPkg
PLATFORM_GUID = 05FD064D-1073-E844-936C-A0E16317107D
PLATFORM_VERSION = 0.3
PLATFORM_RELATIVE_DIR = EmulatorPkg
PLATFORM_DIR = D:\develop\EDK2\edk2\EmulatorPkg
PLATFORM_OUTPUT_DIR = Build\EmulatorIA32

#
# Module Macro Definition
#
MODULE_NAME = BaseIntrinsicLib
MODULE_GUID = 63850097-3E97-4c4f-A52D-C811A0106105
MODULE_NAME_GUID = BaseIntrinsicLib
MODULE_VERSION = 1.0
MODULE_TYPE = BASE
MODULE_FILE = IntrinsicLib.inf
MODULE_FILE_BASE_NAME = IntrinsicLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = CryptoPkg\Library\IntrinsicLib
PACKAGE_RELATIVE_DIR = Library\IntrinsicLib
MODULE_DIR = D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib
FFS_OUTPUT_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\FV\Ffs\63850097-3E97-4c4f-A52D-C811A0106105BaseIntrinsicLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005
BASE_NAME = BaseIntrinsicLib
MODULE_UNI_FILE = BaseIntrinsicLib.uni
FILE_GUID = 63850097-3E97-4c4f-A52D-C811A0106105
MODULE_TYPE = BASE
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = IA32
TOOLCHAIN = VS2022
TOOLCHAIN_TAG = VS2022
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022
BUILD_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022
BIN_DIR = $(BUILD_DIR)\IA32
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib
OUTPUT_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT
DEBUG_DIR = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = copy /y
MV = move /y
RM = del /f /q
MD = mkdir
RD = rmdir /s /q


#
# Tools definitions specific to this module
#
APP_FLAGS = /nologo /E /TC
APP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASL_FLAGS = 
ASL_OUTFLAGS =  -p
ASL = C:\ASL\iasl.exe

ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
ASLCC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
ASLDLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe

ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
ASLPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

ASM_FLAGS = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
ASM = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe

ASM16 = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\ml.exe

ASMLINK_FLAGS = /nologo /tiny
ASMLINK = C:\WINDDK\3790.1830\bin\bin16\link16.exe

BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB
BROTLI = BrotliCompress

CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1b2 /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm -D DISABLE_NEW_DEPRECATED_INTERFACES /Od /Oy-
CC = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083
CRC32 = GenCrc32

DEPS_FLAGS = /showIncludes

DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /WX /IGNORE:4210 /ALIGN:4096 /FILEALIGN:4096 /BASE:0x10000
DLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\link.exe
DLINK_XIPFLAGS =  /ALIGN:32

DLINK2_FLAGS = /WHOLEARCHIVE

DTC_FLAGS = -H epapr
DTC = dtc

DTCPP = cpp

GENFW_FLAGS = 
GENFW = GenFw

LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF
LZMA = LzmaCompress

LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889
LZMAF86 = LzmaF86Compress

MAKE = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\nmake.exe

NASM_FLAGS = -Ox -f win32 -g
NASM = C:\nasm\nasm

NASMB_FLAGS = -f bin

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink="$(DEBUG_DIR)/$(MODULE_NAME).debug"
OBJCOPY_FLAGS = objcopy not needed for
OBJCOPY = echo
OBJCOPY_STRIPFLAG =  --strip-unneeded -R .eh_frame

OPTROM_FLAGS = -e
OPTROM = EfiRom

PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7
PKCS7SIGN = Pkcs7Sign

PP_FLAGS = /nologo /E /TC /FIAutoGen.h
PP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

RC = C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x86\rc.exe

RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF
RSA2048SHA256SIGN = Rsa2048Sha256Sign

SLINK_FLAGS = /NOLOGO /LTCG
SLINK = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\lib.exe

SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779
TIANO = TianoCompress

VFR_FLAGS = -l -n
VFR = VfrCompile

VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
VFRPP = C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\bin\Hostx86\x86\cl.exe

VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08
VPDTOOL = BPDG

cc_resp_1 = @D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\cc_resp_1.txt
cc_resp_4 = @D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\cc_resp_4.txt

MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\CopyMem.obj \
    $(OUTPUT_DIR)\Ia32\MathFtol.obj \
    $(OUTPUT_DIR)\Ia32\MathLShiftS64.obj \
    $(OUTPUT_DIR)\Ia32\MathLldiv.obj \
    $(OUTPUT_DIR)\Ia32\MathLlmul.obj \
    $(OUTPUT_DIR)\Ia32\MathLlshr.obj \
    $(OUTPUT_DIR)\Ia32\MathRShiftU64.obj \
    $(OUTPUT_DIR)\Ia32\MathUlldiv.obj \
    $(OUTPUT_DIR)\Ia32\MathUlldvrm.obj \
    $(OUTPUT_DIR)\Ia32\MathUllrem.obj \
    $(OUTPUT_DIR)\MemoryIntrinsics.obj

INC =  \
    /I$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32 \
    /I$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\MdePkg \
    /I$(WORKSPACE)\MdePkg\Include \
    /I$(WORKSPACE)\MdePkg\Test\UnitTest\Include \
    /I$(WORKSPACE)\MdePkg\Test\Mock\Include \
    /I$(WORKSPACE)\MdePkg\Library\MipiSysTLib\mipisyst\library\include \
    /I$(WORKSPACE)\MdePkg\Include\Ia32

NASM_INC =  \
    -I$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\ \
    -I$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\ \
    -I$(DEBUG_DIR)\ \
    -I$(WORKSPACE)\MdePkg\ \
    -I$(WORKSPACE)\MdePkg\Include\ \
    -I$(WORKSPACE)\MdePkg\Test\UnitTest\Include\ \
    -I$(WORKSPACE)\MdePkg\Test\Mock\Include\ \
    -I$(WORKSPACE)\MdePkg\Library\MipiSysTLib\mipisyst\library\include\ \
    -I$(WORKSPACE)\MdePkg\Include\Ia32^\

OBJECT_FILES_LIST = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\object_files.lst
INC_LIST = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\inc.lst
OBJLIST_0 = $(OUTPUT_DIR)\MemoryIntrinsics.obj $(OUTPUT_DIR)\CopyMem.obj
OBJLIST_1 = $(OUTPUT_DIR)\Ia32\MathFtol.obj $(OUTPUT_DIR)\Ia32\MathRShiftU64.obj $(OUTPUT_DIR)\Ia32\MathLShiftS64.obj


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\BaseIntrinsicLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

!INCLUDE $(MODULE_BUILD_DIR)\dependency
!INCLUDE $(MODULE_BUILD_DIR)\deps_target

#
# Individual Object Build Targets
#
$(OBJLIST_0):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\CopyMem.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\MemoryIntrinsics.c
	"$(CC)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\.\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) $(cc_resp_1)

$(OBJLIST_1):  \
	$(MAKE_FILE) \
	$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathRShiftU64.c \
	$(DEBUG_DIR)\AutoGen.h \
	$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathFtol.c \
	$(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathLShiftS64.c
	"$(CC)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\ $(DEPS_FLAGS) $(CC_FLAGS) $(INC) $(cc_resp_4)

$(OUTPUT_DIR)\BaseIntrinsicLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)\BaseIntrinsicLib.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\BaseIntrinsicLib.lib @$(OBJECT_FILES_LIST)

$(OUTPUT_DIR)\Ia32\MathLldiv.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathLldiv.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathLldiv.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathLldiv.asm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLldiv.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLldiv.asm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.ii
	Trim --source-code --convert-hex --trim-long -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.iiii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.ii
	"$(ASM)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.obj $(ASM_FLAGS) /ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32 $(INC) D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLldiv.iiii

$(OUTPUT_DIR)\Ia32\MathLlmul.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathLlmul.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathLlmul.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlmul.asm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlmul.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlmul.asm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.ii
	Trim --source-code --convert-hex --trim-long -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.iiii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.ii
	"$(ASM)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.obj $(ASM_FLAGS) /ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32 $(INC) D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlmul.iiii

$(OUTPUT_DIR)\Ia32\MathUllrem.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathUllrem.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathUllrem.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathUllrem.asm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUllrem.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUllrem.asm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.ii
	Trim --source-code --convert-hex --trim-long -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.iiii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.ii
	"$(ASM)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.obj $(ASM_FLAGS) /ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32 $(INC) D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUllrem.iiii

$(OUTPUT_DIR)\Ia32\MathUlldvrm.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathUlldvrm.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathUlldvrm.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldvrm.asm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldvrm.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldvrm.asm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.ii
	Trim --source-code --convert-hex --trim-long -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.iiii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.ii
	"$(ASM)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.obj $(ASM_FLAGS) /ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32 $(INC) D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldvrm.iiii

$(OUTPUT_DIR)\Ia32\MathLlshr.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathLlshr.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathLlshr.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlshr.asm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlshr.asm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathLlshr.asm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.ii
	Trim --source-code --convert-hex --trim-long -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.iiii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.ii
	"$(ASM)" /FoD:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.obj $(ASM_FLAGS) /ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32 $(INC) D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathLlshr.iiii

$(OUTPUT_DIR)\Ia32\MathUlldiv.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\Ia32\MathUlldiv.obj : $(DEBUG_DIR)\AutoGen.h
$(OUTPUT_DIR)\Ia32\MathUlldiv.obj : $(WORKSPACE)\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldiv.nasm
	Trim --asm-file -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.i -i $(INC_LIST) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldiv.nasm
	"$(PP)" $(DEPS_FLAGS) $(PP_FLAGS) $(INC) D:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\MathUlldiv.nasm > D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.ii
	Trim --trim-long --source-code -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.iii D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.ii
	"$(NASM)" -ID:\develop\EDK2\edk2\CryptoPkg\Library\IntrinsicLib\Ia32\ $(NASM_INC) $(NASM_FLAGS) -o D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.obj D:\develop\EDK2\edk2\Build\EmulatorIA32\DEBUG_VS2022\IA32\CryptoPkg\Library\IntrinsicLib\IntrinsicLib\OUTPUT\Ia32\MathUlldiv.iii



#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

